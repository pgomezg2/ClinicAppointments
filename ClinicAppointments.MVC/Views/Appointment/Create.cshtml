@model ClinicAppointments.MVC.Models.AppointmentModel

@{
  /**/

  ViewBag.Title = "Create";
}

<h2>Create patient appointment</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "createAppointmentForm" }))
{
  @Html.AntiForgeryToken()

<div class="form">
  <hr />
  @Html.ValidationSummary(true, "", new { @class = "text-danger" })

  <div id="msgError" class="alert alert-danger" role="alert" style="display:none"></div>

  <div class="panel panel-primary">
    <div class="panel-heading">
      <h3 class="panel-title"><strong>Patient information</strong></h3>
    </div>
    <div class="panel-body">
      @Html.HiddenFor(model => model.Patient.Id, htmlAttributes: new { @id = "patientId" })
      @Html.Hidden("specialtyId", "0", htmlAttributes: new { @id = "specialtyId" })
      @Html.Hidden("dateSelected", "0", htmlAttributes: new { @id = "dateSelected" })
      @Html.Hidden("timeSelected", "0", htmlAttributes: new { @id = "timeSelected" })

      <table class="table table-condensed table-responsive">
        <tr>
          <th>
            @Html.DisplayNameFor(model => model.Patient.Identification)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Patient.FirstName)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Patient.LastName)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Patient.PhoneNumber)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Patient.Email)
          </th>
        </tr>
        <tr>
          <td>
            @Html.DisplayFor(model => model.Patient.Identification)
          </td>
          <td>
            @Html.DisplayFor(model => model.Patient.FirstName)
          </td>
          <td>
            @Html.DisplayFor(model => model.Patient.LastName)
          </td>
          <td>
            @Html.DisplayFor(model => model.Patient.PhoneNumber)
          </td>
          <td>
            @Html.DisplayFor(model => model.Patient.Email)
          </td>
        </tr>
      </table>

      <table class="table table-condensed table-responsive">
        <tr>
          <th>
            Specialty
          </th>
          <th>
            Date
          </th>
          <th>
            Time
          </th>
        </tr>
        <tr>
          <td>
            <select class="form-control" id="Specialties" name="Specialties">
              <option value="0">Select specialty</option>
            </select>
            <span id="msgSpecialty" class="text-danger" style="display:none">You must select a specialty</span>
          </td>
          <td>
            <input type="date" class="form-control" id="datePick" placeholder="Date">
            <span id="msgDate" class="text-danger" style="display:none">You must select a valid date</span>
          </td>
          <td>
            <input type="time" class="form-control" id="timePick" placeholder="Time">
            <span id="msgTime" class="text-danger" style="display:none">You must select a valid time</span>
          </td>
        </tr>
      </table>
      <div class="col-md-4">
        <input type="button" value="Create" class="btn btn-primary" onclick="createAppointment()" />
        @Html.ActionLink("Back to list", "Index", "Patient", null, htmlAttributes: new { @class = "btn btn-danger" })
      </div>
    </div>
  </div>

  <div class="panel panel-info">
    <div class="panel-heading">
      <h3 class="panel-title"><strong>Patient appointments</strong></h3>
    </div>
    <div class="panel-body">
      <table class="table table-condensed table-responsive">
        <tr>
          <th>
            @Html.DisplayNameFor(model => model.Specialty.SpecialtyName)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.AppointmentDateTime)
          </th>
          <th></th>
        </tr>
        @if (Model.Patient.Appointments != null)
        {
          foreach (var item in Model.Patient.Appointments)
          {
            <tr>
              <td>
                @Html.DisplayFor(model => item.Specialty.SpecialtyName)
              </td>
              <td>
                @item.AppointmentDateTime.ToString("yyyy-MM-dd HH:mm")
              </td>
              <td>
                <a href="#" onclick="deleteAppointment(@item.Id);">Cancel appointment</a>
              </td>
            </tr>
          }
        }
      </table>
    </div>
  </div>
</div>
}

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")

  <script type="text/javascript">

    $(document).ready(function () {
      loadSpecialties();

      //$("#createAppointmentForm").submit(function (e) {
      //  if (!validateInformation()) {
      //    e.preventDefault();
      //  }
      //});
    })

    function loadSpecialties() {
      $.ajax({
        type: "GET",
        url: "http://local.clinicappointmentsapi.com/api/specialty",
        data: {},
        dataType: 'json',
        contentType: 'application/json',
        success: function (specialtiesArr) {
          $.each(specialtiesArr, function (key, value) {
            $('#Specialties')
              .append($("<option></option>")
              .attr("value", value.Id)
                .text(value.SpecialtyName));
          });
        }
      });
    }

    function validateInformation() {
      $("#msgError").hide();
      $("#msgError").html('');

      var appointmentDate = $("#datePick").val();
      var appointmentTime = $("#timePick").val();
      var SpecialtyId = $("#Specialties").val();

      var CurrentDate = new Date();
      GivenDate = new Date(appointmentDate);

      // Check if selected specialty
      if (SpecialtyId == 0) {
        $("#msgSpecialty").show();
        return false;
      }
      else {
        $("#msgSpecialty").hide();
        $("#specialtyId").val(SpecialtyId);
      }

      // Check if selected date
      if (!appointmentDate) {
        $("#msgDate").html("You must select a valid date");
        $("#msgDate").show();
        return false;
      }
      // Check if selected date is greater than today's
      else if (GivenDate < CurrentDate) {
        $("#msgDate").html("Date must be greater than today");
        $("#msgDate").show();
        return false;
      }
      else {
        $("#msgDate").hide();
        $("#dateSelected").val(appointmentDate);
      }

      if (!appointmentTime) {
        $("#msgTime").show();
        return false;
      }
      else {
        $("#msgTime").hide();
        $("#timeSelected").val(appointmentTime);
      }

      return true;
    }

    function createAppointment() {
      // Check the valid information entered
      if (!validateInformation()) {
        return;
      }

      var fullDateTime = $("#datePick").val() + " " + $("#timePick").val();

      var appointmentModel = {
        PatientId: $("#patientId").val(),
        SpecialtyId: $("#Specialties").val(),
        AppointmentDateTime: fullDateTime
      };

      $.ajax({
        type: "POST",
        url: "http://local.clinicappointmentsapi.com/api/appointment",
        data: JSON.stringify(appointmentModel),
        dataType: 'json',
        contentType: 'application/json',
        success: function (result) {
          if (result == 'Success') {
            location.reload();
          }
          else {
            $("#msgError").html(result);
            $("#msgError").show();
          }
        }
      });
    }

    function deleteAppointment(id) {
      $("#msgError").hide();
      $("#msgError").html('');

      $.ajax({
        type: "DELETE",
        url: "http://local.clinicappointmentsapi.com/api/appointment/" + id,
        data: {},
        dataType: 'json',
        contentType: 'application/json',
        success: function (result) {
          if (result == 'Success') {
            location.reload();
          }
          else {
            $("#msgError").html(result);
            $("#msgError").show();
          }
        }
      });
    }

  </script>
}
